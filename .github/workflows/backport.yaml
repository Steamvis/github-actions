name: Backport

on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - master
  issue_comment:
    types:
      - created

jobs:
  detect_pr_by_comment:
    concurrency: source_pr
    if: ${{ github.event_name == 'issue_comment' && github.event.action == 'created' && github.event.issue.state == 'closed' }}
    runs-on: ubuntu-latest
    outputs:
      release_branch: ${{ steps.comment_info.outputs.branch }}
      commit: ${{ steps.pr_info.outputs.commit }}
      pr_number: ${{ github.event.issue.number }}
    steps:
      - uses: actions-ecosystem/action-regex-match@v2
        id: regexp_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^/backport\sv?(\d+\.\d+)(\.\d+)?$' # /backport 1.34 || /backport v1.34 || /backport 1.34.12 || /backport v1.34.12
      - name: Get comment info
        id: comment_info
        if: ${{ steps.regexp_match.outputs.match != null }}
        env:
          MINOR_RELEASE: ${{ steps.regexp_match.outputs.group1 }}
        run: |
          releaseBranch="release-${MINOR_RELEASE}"
          echo "branch=${releaseBranch}" >> $GITHUB_OUTPUT
      - name: Get Pull Request info
        id: pr_info
        if: ${{ steps.regexp_match.outputs.match != null }}
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.issue.number }}
            })
            core.setOutput('commit', response.data.merge_commit_sha)

backport_to_release_branch:
    runs-on: ubuntu-latest
    needs: [detect_pr_by_label, detect_pr_by_comment]
    if: always() && (needs.detect_pr_by_label.outputs.release_branch || needs.detect_pr_by_comment.outputs.release_branch)
    steps:
      - name: Detect source
        id: prepare
        run: |
          releaseBranch=${{needs.detect_pr_by_label.outputs.release_branch}}
          commit=${{needs.detect_pr_by_label.outputs.commit}}
          prNumber=${{needs.detect_pr_by_label.outputs.pr_number}}
          if [ -z $releaseBranch ]; then
            releaseBranch=${{needs.detect_pr_by_comment.outputs.release_branch}}
            commit=${{needs.detect_pr_by_comment.outputs.commit}}
            prNumber=${{needs.detect_pr_by_comment.outputs.pr_number}}
          fi
          echo "release_branch=${releaseBranch}" >> $GITHUB_OUTPUT
          echo "commit=${commit}" >> $GITHUB_OUTPUT
          echo "pr_number=${prNumber}" >> $GITHUB_OUTPUT
      - name: Check release branch exists
        id: check_target_branch
        uses: actions/github-script@v6
        env:
          RELEASE_BRANCH: ${{ steps.prepare.outputs.release_branch }}
        with:
          script: |
            const response = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + process.env.RELEASE_BRANCH
            })
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: Cherry pick
        id: cherry_pick_pr
        uses: deckhouse/backport-action@v1.0.0
        env:
          RELEASE_BRANCH: ${{ steps.prepare.outputs.release_branch }}
          COMMIT_SHA: ${{ steps.prepare.outputs.commit }}
          SOURCE_PR_NUMBER: ${{ steps.prepare.outputs.pr_number }}
        with:
          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
          branch: ${{ env.RELEASE_BRANCH }}
          commit: ${{ env.COMMIT_SHA }}
          labels: auto,backported
          automerge: true
          merge_method: squash

          
          